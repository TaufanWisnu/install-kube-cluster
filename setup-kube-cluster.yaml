#initial
---
- hosts: all
  become: yes
  tasks:
    - name: create the 'ubuntu' user
      user: name=ubuntu append=yes state=present createhome=yes shell=/bin/bash

    - name: allow 'ubuntu' to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        line: 'ubuntu ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'

    - name: set up authorized keys for the ubuntu user
      authorized_key: user=ubuntu key="{{item}}"
      with_file:
        - ~/.ssh/id_rsa.pub

# Install Kube Depencicies
- hosts: all
  become: yes
  tasks:
   - name: create Docker config directory
     file: path=/etc/docker state=directory

   - name: changing Docker to systemd driver
     copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"]
        }

   - name: install Docker
     apt:
       name: docker.io
       state: present
       update_cache: true

   - name: install APT Transport HTTPS
     apt:
       name: apt-transport-https
       state: present

   - name: add Kubernetes apt-key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: add Kubernetes' APT repository
     apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: 'kubernetes'

   - name: install kubelet
     apt:
       name: kubelet
       state: present
       update_cache: true

   - name: install kubeadm
     apt:
       name: kubeadm
       state: present


- hosts: control_plane
  become: yes
  tasks:
   - name: install kubectl
     apt:
       name: kubectl
       state: present
       force: yes


# Initialize the Cluster
- hosts: control_plane
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt

    - name: create .kube directory
      become: yes
      become_user: ubuntu
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu

    - name: install Pod network
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt


# Setting Up the Worker Nodes
- hosts: control_plane
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"


- hosts: workers
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['control1'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt


# Install Helm
- hosts: control_plane
  become: yes
  tasks:
    - name: Download Helm command line tool
      ansible.builtin.uri:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        return_content: true
      register: helm_installer

    - name: Install Helm
      ansible.builtin.command:
        cmd: bash
        stdin: "{{ helm_installer.content }}"
        creates: /usr/local/bin/helm
      environment:
        DESIRED_VERSION: "{{ helm_version | default('') }}"


# Install Ingress Nginx
- hosts: control_plane
  become: yes
  become_user: ubuntu
  vars:
    helm_chart_url: "https://kubernetes.github.io/ingress-nginx"
  tasks:
    - name: Add helm repo
      kubernetes.core.helm_repository:
        name: ingress-nginx
        repo_url: "{{ helm_chart_url }}"

    - name: Install Nginx Chart
      kubernetes.core.helm:
        name: ingress-nginx
        namespace: default
        chart_ref: ingress-nginx/ingress-nginx


# Install Cert Manager
- hosts: control_plane
  become: yes
  become_user: ubuntu
  vars:
    helm_chart_url: "https://charts.jetstack.io"
  tasks:
    - name: Add helm repo jetstack
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: "{{ helm_chart_url }}"

    - name: Install Cert Manager
      kubernetes.core.helm:
        create_namespace: true
        name: cert-manager
        namespace: cert-manager
        chart_ref: jetstack/cert-manager
        chart_version: v1.10.1
        values:
          installCRDs:
            enabled: True
